{"version":3,"sources":["components/Button.jsx","components/Select.jsx","components/OrderList.jsx","App.js","index.js"],"names":["Button","text","onClick","type","Select","value","onChange","optionCount","maxNameLength","length","push","map","number","OrderList","reverse","sortByLength","sortByName","isReverse","reset","allGoods","sortBy","filterByLength","copyGoods","filter","good","sort","prev","next","localeCompare","key","goodsFromServer","App","state","listIsVisible","goodsList","minWordLength","reverseList","setState","listVisibility","prevState","resetList","event","target","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAkBeA,EAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACb,4BACEC,KAAK,SACLD,QAASA,GAERD,ICLQG,EAAS,SAAC,GAOrB,IAHK,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SAGMC,GADF,EADJC,cAEoB,IAEZC,EAAS,EAAGA,GAAU,GAAIA,IAChCF,EAAYG,KAAKD,GAGnB,OACE,4BACIJ,MAAOA,EACPC,SAAUA,GAETC,EAAYI,KAAI,SAACC,GAAD,OACf,4BAAQP,MAAK,UAAKO,IAAWA,QCf1BC,EAAY,SAAC,GAWnB,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,aACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAf,EAGI,EAHJA,MACAgB,EAEI,EAFJA,eACAb,EACI,EADJA,cAEMc,EAAY,YAAIH,GAAUI,QAAO,SAAAC,GAAI,OAAIA,EAAKf,QAAUJ,KAoB9D,OAlBAiB,EAAUG,MAAK,SAACC,EAAKC,GACnB,OAAOP,GAEL,IAAK,OACL,OAAOM,EAAKE,cAAcD,GAE1B,IAAK,SACL,OAAOD,EAAKjB,OAASkB,EAAKlB,OAE1B,QACA,OAAO,MAIPQ,GACFK,EAAUR,UAIV,oCACE,4BACGQ,EAAUX,KAAI,SAAAa,GAAI,OACjB,wBAAIK,IAAKL,GACNA,OAIP,kBAAC,EAAD,CACEtB,QAASY,EACTb,KAAK,YAEP,kBAAC,EAAD,CACEC,QAASc,EACTf,KAAK,iBAEP,kBAAC,EAAD,CACEC,QAASgB,EACTjB,KAAK,UAEP,kBAAC,EAAD,CACEC,QAASa,EACTd,KAAK,mBAEP,kBAAC,EAAD,CACEK,SAAUe,EACVhB,MAAOA,EACPG,cAAeA,MC5DjBsB,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAuEaC,E,4MAnEbC,MAAQ,CACNC,eAAe,EACfC,UAAWJ,EACXV,OAAQ,OACRH,WAAW,EACXkB,cAAe,EACf3B,cAAe,I,EAGjB4B,YAAc,kBAAM,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAC1Cf,WAAYe,EAAMf,e,EAIpBqB,eAAiB,kBAAM,EAAKD,UAC1B,SAAAE,GAAS,MAAK,CAAEN,eAAgBM,EAAUN,mB,EAG5CO,UAAY,kBAAM,EAAKH,SAAS,CAC9BH,UAAWJ,EACXb,WAAW,EACXG,OAAQ,OACRe,cAAe,K,EAGjBnB,WAAa,kBAAM,EAAKqB,SAAS,CAC/BjB,OAAQ,U,EAGVL,aAAe,kBAAM,EAAKsB,SAAS,CACjCjB,OAAQ,Y,EAGVC,eAAiB,SAAAoB,GAAK,OAAI,EAAKJ,SAAS,CACtCF,eAAgBM,EAAMC,OAAOrC,S,4CAG/B,WACE,OACE,oCACGsC,KAAKX,MAAMC,cAER,kBAAC,EAAD,CACEd,SAAUwB,KAAKX,MAAME,UACrBpB,QAAS6B,KAAKP,YACdlB,MAAOyB,KAAKH,UACZxB,WAAY2B,KAAK3B,WACjBD,aAAc4B,KAAK5B,aACnBE,UAAW0B,KAAKX,MAAMf,UACtBG,OAAQuB,KAAKX,MAAMZ,OACnBf,MAAOsC,KAAKX,MAAMG,cAClBd,eAAgBsB,KAAKtB,eACrBb,cAAemC,KAAKnC,gBAItB,kBAAC,EAAD,CACEN,QAASyC,KAAKL,eACdrC,KAAK,e,GA3DD2C,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8b2fdcfd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Button;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Select = ({\r\n  value,\r\n  onChange,\r\n  maxNameLength\r\n}) => {\r\n  const optionCount = [];\r\n\r\n  for(let length = 1; length <= 10; length++) {\r\n    optionCount.push(length)\r\n  }\r\n\r\n  return (\r\n    <select \r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {optionCount.map((number) => (\r\n          <option value={`${number}`}>{number}</option>\r\n        ))}\r\n      </select>\r\n    )\r\n}\r\n\r\n\r\nSelect.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  maxNameLength: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport PropTypes from 'prop-types';\r\nimport { Select } from './Select';\r\n\r\nexport const OrderList = ({\r\n  reverse,\r\n  sortByLength,\r\n  sortByName,\r\n  isReverse,\r\n  reset,\r\n  allGoods,\r\n  sortBy,\r\n  value,\r\n  filterByLength,\r\n  maxNameLength,\r\n}) => {\r\n  const copyGoods = [...allGoods].filter(good => good.length >= value);\r\n\r\n  copyGoods.sort((prev,next) => {\r\n    switch(sortBy) {\r\n\r\n      case 'name': \r\n      return prev.localeCompare(next);\r\n\r\n      case 'length':\r\n      return prev.length - next.length;\r\n\r\n      default:\r\n      return 0;\r\n    }\r\n  })\r\n\r\n  if (isReverse) {\r\n    copyGoods.reverse();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {copyGoods.map(good => (\r\n          <li key={good}>\r\n            {good}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Button\r\n        onClick={reverse}\r\n        text='reverse'\r\n      />\r\n      <Button\r\n        onClick={sortByName}\r\n        text='sort by Name'\r\n      />\r\n      <Button\r\n        onClick={reset}\r\n        text='reset'\r\n      />\r\n      <Button\r\n        onClick={sortByLength}\r\n        text='sort by Length'\r\n      />\r\n      <Select\r\n        onChange={filterByLength}\r\n        value={value}\r\n        maxNameLength={maxNameLength}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nOrderList.propTypes = {\r\n  sortBy: PropTypes.string.isRequired,\r\n  isReverse: PropTypes.bool.isRequired,\r\n  reverse: PropTypes.func.isRequired,\r\n  sortByName: PropTypes.func.isRequired,\r\n  sortByLength: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  allGoods:\r\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  filterByLength: PropTypes.func.isRequired,\r\n  maxNameLength: PropTypes.number.isRequired,\r\n}\r\n","import React from 'react';\nimport { OrderList } from './components/OrderList';\nimport './App.css';\nimport Button from './components/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    listIsVisible: false,\n    goodsList: goodsFromServer,\n    sortBy: 'null',\n    isReverse: false,\n    minWordLength: 1,\n    maxNameLength: 10,\n  }\n\n  reverseList = () => this.setState(state => ({\n    isReverse: !state.isReverse,\n  }\n  ));\n\n  listVisibility = () => this.setState(\n    prevState => ({ listIsVisible: !prevState.listIsVisible }),\n  );\n\n  resetList = () => this.setState({\n    goodsList: goodsFromServer,\n    isReverse: false,\n    sortBy: 'null',\n    minWordLength: 0,\n  })\n\n  sortByName = () => this.setState({\n    sortBy: 'name',\n  })\n\n  sortByLength = () => this.setState({\n    sortBy: 'length',\n  })\n\n  filterByLength = event => this.setState({\n    minWordLength: +event.target.value,\n  })\n\n  render() {\n    return (\n      <>\n        {this.state.listIsVisible\n          ? (\n            <OrderList\n              allGoods={this.state.goodsList}\n              reverse={this.reverseList}\n              reset={this.resetList}\n              sortByName={this.sortByName}\n              sortByLength={this.sortByLength}\n              isReverse={this.state.isReverse}\n              sortBy={this.state.sortBy}\n              value={this.state.minWordLength}\n              filterByLength={this.filterByLength}\n              maxNameLength={this.maxNameLength}\n            />\n          )\n          : (\n            <Button\n              onClick={this.listVisibility}\n              text=\"start\"\n            />\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}