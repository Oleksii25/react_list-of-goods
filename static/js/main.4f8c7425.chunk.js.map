{"version":3,"sources":["components/OrderList.jsx","components/Button.jsx","components/Select.jsx","App.js","index.js"],"names":["OrderList","sortedGoods","copyGoods","sortBy","sort","prev","next","localeCompare","length","this","props","isReverse","goods","value","filter","good","reverse","map","key","React","Component","Button","text","onClick","type","Select","onChange","maxNameLength","optionCount","Array","from","_","i","number","goodsFromServer","App","state","listIsVisible","goodsList","minWordLength","reverseList","setState","changeListVisibility","prevState","resetList","sortByName","sortByLength","filterByLength","event","target","ReactDOM","render","document","getElementById"],"mappings":"oOAIaA,EAAb,4MACEC,YAAc,SAACC,EAAWC,GAAZ,OAAuBD,EAAUE,MAAK,SAACC,EAAMC,GACzD,OAAQH,GACN,IAAK,OACH,OAAOE,EAAKE,cAAcD,GAE5B,IAAK,SACH,OAAOD,EAAKG,OAASF,EAAKE,OAE5B,QACE,OAAO,OAVf,4CAcE,WAEE,MAKIC,KAAKC,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,MACAT,EAHF,EAGEA,OACAU,EAJF,EAIEA,MAGIX,EAAY,YAAIU,GAAOE,QAAO,SAAAC,GAAI,OAAIA,EAAKP,QAAUK,KAQ3D,OANAJ,KAAKR,YAAYC,EAAWC,GAExBQ,GACFT,EAAUc,UAIV,oCACE,4BACGd,EAAUe,KAAI,SAAAF,GAAI,OACjB,wBAAIG,IAAKH,GACNA,YApCf,GAA+BI,IAAMC,WCatBC,G,MAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACb,4BACEC,KAAK,SACLD,QAASA,GAERD,KCLQG,EAAS,SAAC,GAIhB,IAHLZ,EAGI,EAHJA,MACAa,EAEI,EAFJA,SACAC,EACI,EADJA,cAEMC,EAAcC,MAAMC,KAAK,CAACtB,OAAQmB,IAAgB,SAACI,EAAGC,GAAJ,OAAUA,EAAI,KAEtE,OACE,4BACEnB,MAAOA,EACPa,SAAUA,GAETE,EAAYX,KAAI,SAAAgB,GAAM,OACrB,4BACEpB,MAAK,UAAKoB,GACVf,IAAKe,GAEJA,QCbLC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0FaC,E,4MAtFbC,MAAQ,CACNC,eAAe,EACfC,UAAWJ,EACX/B,OAAQ,OACRQ,WAAW,EACX4B,cAAe,EACfZ,cAAe,I,EAGjBa,YAAc,kBAAM,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAC1CzB,WAAYyB,EAAMzB,e,EAIpB+B,qBAAuB,kBAAM,EAAKD,UAChC,SAAAE,GAAS,MAAK,CAAEN,eAAgBM,EAAUN,mB,EAG5CO,UAAY,kBAAM,EAAKH,SAAS,CAC9BH,UAAWJ,EACXvB,WAAW,EACXR,OAAQ,OACRoC,cAAe,K,EAGjBM,WAAa,kBAAM,EAAKJ,SAAS,CAC/BtC,OAAQ,U,EAGV2C,aAAe,kBAAM,EAAKL,SAAS,CACjCtC,OAAQ,Y,EAGV4C,eAAiB,SAAAC,GAAK,OAAI,EAAKP,SAAS,CACtCF,eAAgBS,EAAMC,OAAOpC,S,4CAG/B,WACE,OACE,oCACGJ,KAAK2B,MAAMC,cAER,oCACE,kBAAC,EAAD,CACEzB,MAAOH,KAAK2B,MAAME,UAClB3B,UAAWF,KAAK2B,MAAMzB,UACtBR,OAAQM,KAAK2B,MAAMjC,OACnBwB,cAAelB,KAAK2B,MAAMT,cAC1Bd,MAAOJ,KAAK2B,MAAMG,gBAEpB,kBAAC,EAAD,CACEhB,QAASd,KAAK+B,YACdlB,KAAK,YAEP,kBAAC,EAAD,CACEC,QAASd,KAAKoC,WACdvB,KAAK,iBAEP,kBAAC,EAAD,CACEC,QAASd,KAAKmC,UACdtB,KAAK,UAEP,kBAAC,EAAD,CACEC,QAASd,KAAKqC,aACdxB,KAAK,mBAEP,kBAAC,EAAD,CACEI,SAAUjB,KAAKsC,eACflC,MAAOJ,KAAK2B,MAAMG,cAClBZ,cAAelB,KAAK2B,MAAMT,iBAM9B,kBAAC,EAAD,CACEJ,QAASd,KAAKiC,qBACdpB,KAAK,e,GA9EDH,IAAMC,WChBxB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4f8c7425.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport class OrderList extends React.Component {\n  sortedGoods = (copyGoods, sortBy) => copyGoods.sort((prev, next) => {\n    switch (sortBy) {\n      case 'name':\n        return prev.localeCompare(next);\n\n      case 'length':\n        return prev.length - next.length;\n\n      default:\n        return 0;\n    }\n  })\n\n  render() {\n    \n    const {\n      isReverse,\n      goods,\n      sortBy,\n      value,\n    } = this.props;\n\n    const copyGoods = [...goods].filter(good => good.length >= value);\n\n    this.sortedGoods(copyGoods, sortBy);\n\n    if (isReverse) {\n      copyGoods.reverse();\n    }\n\n    return (\n      <>\n        <ul>\n          {copyGoods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nOrderList.propTypes = {\n  sortBy: PropTypes.string.isRequired,\n  isReverse: PropTypes.bool.isRequired,\n  goods:\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({\n  value,\n  onChange,\n  maxNameLength,\n}) => {\n  const optionCount = Array.from({length: maxNameLength}, (_, i) => i + 1)\n\n  return (\n    <select\n      value={value}\n      onChange={onChange}\n    >\n      {optionCount.map(number => (\n        <option\n          value={`${number}`}\n          key={number}\n        >\n          {number}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  maxNameLength: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { OrderList } from './components/OrderList';\nimport './App.css';\nimport Button from './components/Button';\n\nimport { Select } from './components/Select';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    listIsVisible: false,\n    goodsList: goodsFromServer,\n    sortBy: 'null',\n    isReverse: false,\n    minWordLength: 1,\n    maxNameLength: 10,\n  }\n\n  reverseList = () => this.setState(state => ({\n    isReverse: !state.isReverse,\n  }\n  ));\n\n  changeListVisibility = () => this.setState(\n    prevState => ({ listIsVisible: !prevState.listIsVisible }),\n  );\n\n  resetList = () => this.setState({\n    goodsList: goodsFromServer,\n    isReverse: false,\n    sortBy: 'null',\n    minWordLength: 0,\n  })\n\n  sortByName = () => this.setState({\n    sortBy: 'name',\n  })\n\n  sortByLength = () => this.setState({\n    sortBy: 'length',\n  })\n\n  filterByLength = event => this.setState({\n    minWordLength: +event.target.value,\n  })\n\n  render() {\n    return (\n      <>\n        {this.state.listIsVisible\n          ? (\n            <>\n              <OrderList\n                goods={this.state.goodsList}\n                isReverse={this.state.isReverse}\n                sortBy={this.state.sortBy}\n                maxNameLength={this.state.maxNameLength}\n                value={this.state.minWordLength}\n              />\n              <Button\n                onClick={this.reverseList}\n                text=\"reverse\"\n              />\n              <Button\n                onClick={this.sortByName}\n                text=\"sort by Name\"\n              />\n              <Button\n                onClick={this.resetList}\n                text=\"reset\"\n              />\n              <Button\n                onClick={this.sortByLength}\n                text=\"sort by Length\"\n              />\n              <Select\n                onChange={this.filterByLength}\n                value={this.state.minWordLength}\n                maxNameLength={this.state.maxNameLength}\n              />\n            </>\n\n          )\n          : (\n            <Button\n              onClick={this.changeListVisibility}\n              text=\"start\"\n            />\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}