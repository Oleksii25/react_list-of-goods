{"version":3,"sources":["components/Button.jsx","components/OrderList.jsx","App.js","index.js"],"names":["Button","text","action","type","onClick","OrderList","reverse","sortByLength","sortByName","isReverse","reset","allGoods","sortBy","value","filterByLength","copyGoods","filter","good","length","sort","prev","next","localeCompare","map","key","onChange","goodsFromServer","App","state","listIsVisible","goodsList","wordLength","reverseList","setState","listVisibility","prevState","resetList","event","target","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAiBeA,EAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACb,4BACEC,KAAK,SACLC,QAASF,GAERD,ICJQI,EAAY,SAAC,GAUnB,IATLC,EASI,EATJA,QACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,UACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,eAEMC,EAAY,YAAIJ,GAAUK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAoB9D,OAlBAE,EAAUI,MAAK,SAACC,EAAKC,GACnB,OAAOT,GAEL,IAAK,OACL,OAAOQ,EAAKE,cAAcD,GAE1B,IAAK,SACL,OAAOD,EAAKF,OAASG,EAAKH,OAE1B,QACA,OAAO,SAIPT,GACFM,EAAUT,UAIV,oCACE,4BACGS,EAAUQ,KAAI,SAAAN,GAAI,OACjB,wBAAIO,IAAKP,GACNA,OAIP,kBAAC,EAAD,CACEf,OAAQI,EACRL,KAAK,YAEP,kBAAC,EAAD,CACEC,OAAQM,EACRP,KAAK,iBAEP,kBAAC,EAAD,CACEC,OAAQQ,EACRT,KAAK,UAEP,kBAAC,EAAD,CACEC,OAAQK,EACRN,KAAK,mBAEP,4BACEY,MAAOA,EACPY,SAAUX,GAEV,4BAAQD,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,SCpEFa,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAoEaC,E,4MAhEbC,MAAQ,CACNC,eAAe,EACfC,UAAWJ,EACXd,OAAQ,OACRH,WAAW,EACXsB,WAAY,G,EAGdC,YAAc,kBAAM,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAC1CnB,WAAYmB,EAAMnB,e,EAIpByB,eAAiB,kBAAM,EAAKD,UAC1B,SAAAE,GAAS,MAAK,CAAEN,eAAgBM,EAAUN,mB,EAG5CO,UAAY,kBAAM,EAAKH,SAAS,CAC9BH,UAAWJ,EACXjB,WAAW,EACXG,OAAQ,U,EAGVJ,WAAa,kBAAM,EAAKyB,SAAS,CAC/BrB,OAAQ,U,EAGVL,aAAe,kBAAM,EAAK0B,SAAS,CACjCrB,OAAQ,Y,EAGVE,eAAiB,SAACuB,GAAD,OAAW,EAAKJ,SAAS,CACxCF,YAAaM,EAAMC,OAAOzB,S,4CAG5B,WACE,OACE,oCACG0B,KAAKX,MAAMC,cAER,kBAAC,EAAD,CACElB,SAAU4B,KAAKX,MAAME,UACrBxB,QAASiC,KAAKP,YACdtB,MAAO6B,KAAKH,UACZ5B,WAAY+B,KAAK/B,WACjBD,aAAcgC,KAAKhC,aACnBE,UAAW8B,KAAKX,MAAMnB,UACtBG,OAAQ2B,KAAKX,MAAMhB,OACnBC,MAAO0B,KAAKX,MAAMG,WAClBjB,eAAgByB,KAAKzB,iBAIvB,kBAAC,EAAD,CACEZ,OAAQqC,KAAKL,eACbjC,KAAK,e,GAxDDuC,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ec115656.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text, action }) => (\n  <button\n    type=\"button\"\n    onClick={action}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\r\nimport Button from './Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const OrderList = ({\r\n  reverse,\r\n  sortByLength,\r\n  sortByName,\r\n  isReverse,\r\n  reset,\r\n  allGoods,\r\n  sortBy,\r\n  value,\r\n  filterByLength,\r\n}) => {\r\n  const copyGoods = [...allGoods].filter(good => good.length >= value);\r\n\r\n  copyGoods.sort((prev,next) => {\r\n    switch(sortBy) {\r\n\r\n      case 'name': \r\n      return prev.localeCompare(next);\r\n\r\n      case 'length':\r\n      return prev.length - next.length;\r\n\r\n      default:\r\n      return null;\r\n    }\r\n  })\r\n\r\n  if (isReverse) {\r\n    copyGoods.reverse();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {copyGoods.map(good => (\r\n          <li key={good}>\r\n            {good}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Button\r\n        action={reverse}\r\n        text='reverse'\r\n      />\r\n      <Button\r\n        action={sortByName}\r\n        text='sort by Name'\r\n      />\r\n      <Button\r\n        action={reset}\r\n        text='reset'\r\n      />\r\n      <Button\r\n        action={sortByLength}\r\n        text='sort by Length'\r\n      />\r\n      <select \r\n        value={value}\r\n        onChange={filterByLength}\r\n      >\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"7\">7</option>\r\n        <option value=\"8\">8</option>\r\n        <option value=\"9\">9</option>\r\n        <option value=\"10\">10</option>\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nOrderList.propTypes = {\r\n  sortBy: PropTypes.string.isRequired,\r\n  isReverse: PropTypes.bool.isRequired,\r\n  reverse: PropTypes.func.isRequired,\r\n  sortByName: PropTypes.func.isRequired,\r\n  sortByLength: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  allGoods:\r\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  filterByLength: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\nimport { OrderList } from './components/OrderList';\nimport './App.css';\nimport Button from './components/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    listIsVisible: false,\n    goodsList: goodsFromServer,\n    sortBy: 'null',\n    isReverse: false,\n    wordLength: 1,\n  }\n\n  reverseList = () => this.setState(state => ({\n    isReverse: !state.isReverse,\n  }\n  ));\n\n  listVisibility = () => this.setState(\n    prevState => ({ listIsVisible: !prevState.listIsVisible }),\n  );\n\n  resetList = () => this.setState({\n    goodsList: goodsFromServer,\n    isReverse: false,\n    sortBy: 'null',\n  })\n\n  sortByName = () => this.setState({\n    sortBy: 'name',\n  })\n\n  sortByLength = () => this.setState({\n    sortBy: 'length',\n  })\n\n  filterByLength = (event) => this.setState({\n    wordLength: +event.target.value\n  })\n\n  render() {\n    return (\n      <>\n        {this.state.listIsVisible\n          ? (\n            <OrderList\n              allGoods={this.state.goodsList}\n              reverse={this.reverseList}\n              reset={this.resetList}\n              sortByName={this.sortByName}\n              sortByLength={this.sortByLength}\n              isReverse={this.state.isReverse}\n              sortBy={this.state.sortBy}\n              value={this.state.wordLength}\n              filterByLength={this.filterByLength}\n            />\n          )\n          : (\n            <Button\n              action={this.listVisibility}\n              text=\"start\"\n            />\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}