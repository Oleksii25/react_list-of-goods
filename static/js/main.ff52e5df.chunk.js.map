{"version":3,"sources":["components/ListItem.jsx","components/OrderList.jsx","components/Button.jsx","components/Select.jsx","App.js","index.js"],"names":["ListItem","text","OrderList","goods","this","props","map","good","key","React","Component","Button","onClick","type","Select","value","onChange","optionCount","number","goodsFromServer","App","state","isListVisible","goodsList","sortParameters","minWordLength","maxNameLength","reverseList","setState","reverse","changeListVisibility","prevState","resetList","changeSortParametersInString","sortByParameters","changeSortParametersInNumber","copyGoods","sort","prev","next","localeCompare","length","filterByLength","event","target","filter","Array","from","_","i","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,4BACGA,ICDQC,EAAb,4JACE,WACE,IACEC,EACEC,KAAKC,MADPF,MAGF,OACE,oCACE,4BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EACLN,KAAMM,aAZpB,GAA+BE,IAAMC,WCatBC,G,MAdA,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,QAAT,OACb,4BACEC,KAAK,SACLD,QAASA,GAERX,KCLQa,EAAS,SAAC,GAAD,IACpBC,EADoB,EACpBA,MACAC,EAFoB,EAEpBA,SACAC,EAHoB,EAGpBA,YAHoB,OAKpB,4BACEF,MAAOA,EACPC,SAAUA,GAETC,EAAYX,KAAI,SAAAY,GAAM,OACrB,4BACEH,MAAK,UAAKG,GACVV,IAAKU,GAEJA,QCVHC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoHaC,E,4MAhHbC,MAAQ,CACNC,eAAe,EACfC,UAAWJ,EACXK,eAAgB,OAChBC,cAAe,EACfC,cAAe,I,EAGjBC,YAAc,kBAAM,EAAKC,UAAS,SAAAP,GAAK,MAAK,CAC1CE,UAAW,YAAIF,EAAME,WAAWM,e,EAGlCC,qBAAuB,kBAAM,EAAKF,UAChC,SAAAG,GAAS,MAAK,CAAET,eAAgBS,EAAUT,mB,EAG5CU,UAAY,kBAAM,EAAKJ,SAAS,CAC9BL,UAAWJ,EACXK,eAAgB,OAChBC,cAAe,K,EAGjBQ,6BAA+B,WAC7B,EAAKL,SAAS,CACZJ,eAAgB,WAElB,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBE,UACE,EAAKW,iBAAL,YAA0Bb,EAAME,WAAYF,EAAMG,qB,EAIxDW,6BAA8B,WAC5B,EAAKP,SAAS,CACZJ,eAAgB,WAGlB,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBE,UACE,EAAKW,iBAAL,YAA0Bb,EAAME,WAAYF,EAAMG,qB,EAIxDU,iBACE,SAACE,EAAWZ,GAAZ,OAA+BY,EAAUC,MAAK,SAACC,EAAMC,GACnD,OAAQf,GACN,IAAK,SACH,OAAOc,EAAKE,cAAcD,GAE5B,IAAK,SACH,OAAOD,EAAKG,OAASF,EAAKE,OAE5B,QACE,OAAO,O,EAIfC,eAAiB,SAAAC,GAAK,OAAI,EAAKf,SAAS,CACtCH,eAAgBkB,EAAMC,OAAO7B,MAC7BQ,UACEJ,EAAgB0B,QAAO,SAAAtC,GAAI,OAAIA,EAAKkC,SAAWE,EAAMC,OAAO7B,Y,4CAGhE,WACE,IAAME,EAAc6B,MAAMC,KACxB,CAAEN,OAAQrC,KAAKiB,MAAMK,gBAAiB,SAACsB,EAAGC,GAAJ,OAAUA,EAAI,KAGtD,OACE,oCACG7C,KAAKiB,MAAMC,cAER,oCACE,kBAAC,EAAD,CACEnB,MAAOC,KAAKiB,MAAME,YAEpB,kBAAC,EAAD,CACEX,QAASR,KAAKuB,YACd1B,KAAK,YAEP,kBAAC,EAAD,CACEW,QAASR,KAAK6B,6BACdhC,KAAK,iBAEP,kBAAC,EAAD,CACEW,QAASR,KAAK4B,UACd/B,KAAK,UAEP,kBAAC,EAAD,CACEW,QAASR,KAAK+B,6BACdlC,KAAK,mBAEP,kBAAC,EAAD,CACEe,SAAUZ,KAAKsC,eACf3B,MAAOX,KAAKiB,MAAMI,cAClBR,YAAaA,KAMjB,kBAAC,EAAD,CACEL,QAASR,KAAK0B,qBACd7B,KAAK,e,GAxGDQ,IAAMC,WChBxBwC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ff52e5df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ListItem = ({ text }) => (\n  <li>\n    {text}\n  </li>\n);\n\nListItem.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from './ListItem';\n\nexport class OrderList extends React.Component {\n  render() {\n    const {\n      goods,\n    } = this.props;\n\n    return (\n      <>\n        <ul>\n          {goods.map(good => (\n            <ListItem\n              key={good}\n              text={good}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nOrderList.propTypes = {\n  goods:\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({\n  value,\n  onChange,\n  optionCount,\n}) => (\n  <select\n    value={value}\n    onChange={onChange}\n  >\n    {optionCount.map(number => (\n      <option\n        value={`${number}`}\n        key={number}\n      >\n        {number}\n      </option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = {\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  optionCount: PropTypes.arrayOf(\n    PropTypes.number.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { OrderList } from './components/OrderList';\nimport './App.css';\nimport Button from './components/Button';\n\nimport { Select } from './components/Select';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isListVisible: false,\n    goodsList: goodsFromServer,\n    sortParameters: 'null',\n    minWordLength: 1,\n    maxNameLength: 10,\n  }\n\n  reverseList = () => this.setState(state => ({\n    goodsList: [...state.goodsList].reverse(),\n  }));\n\n  changeListVisibility = () => this.setState(\n    prevState => ({ isListVisible: !prevState.isListVisible }),\n  );\n\n  resetList = () => this.setState({\n    goodsList: goodsFromServer,\n    sortParameters: 'null',\n    minWordLength: 0,\n  })\n\n  changeSortParametersInString = () => {\n    this.setState({\n      sortParameters: 'string',\n    });\n    this.setState(state => ({\n      goodsList:\n        this.sortByParameters([...state.goodsList], state.sortParameters),\n    }));\n  }\n\n  changeSortParametersInNumber= () => {\n    this.setState({\n      sortParameters: 'number',\n    });\n\n    this.setState(state => ({\n      goodsList:\n        this.sortByParameters([...state.goodsList], state.sortParameters),\n    }));\n  }\n\n  sortByParameters =\n    (copyGoods, sortParameters) => copyGoods.sort((prev, next) => {\n      switch (sortParameters) {\n        case 'string':\n          return prev.localeCompare(next);\n\n        case 'number':\n          return prev.length - next.length;\n\n        default:\n          return 0;\n      }\n    })\n\n  filterByLength = event => this.setState({\n    minWordLength: +event.target.value,\n    goodsList:\n      goodsFromServer.filter(good => good.length >= +event.target.value),\n  })\n\n  render() {\n    const optionCount = Array.from(\n      { length: this.state.maxNameLength }, (_, i) => i + 1,\n    );\n\n    return (\n      <>\n        {this.state.isListVisible\n          ? (\n            <>\n              <OrderList\n                goods={this.state.goodsList}\n              />\n              <Button\n                onClick={this.reverseList}\n                text=\"reverse\"\n              />\n              <Button\n                onClick={this.changeSortParametersInString}\n                text=\"sort by Name\"\n              />\n              <Button\n                onClick={this.resetList}\n                text=\"reset\"\n              />\n              <Button\n                onClick={this.changeSortParametersInNumber}\n                text=\"sort by Length\"\n              />\n              <Select\n                onChange={this.filterByLength}\n                value={this.state.minWordLength}\n                optionCount={optionCount}\n              />\n            </>\n\n          )\n          : (\n            <Button\n              onClick={this.changeListVisibility}\n              text=\"start\"\n            />\n          )\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}